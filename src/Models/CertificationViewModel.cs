// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace MVP.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// The account certification view model for edit.
    /// </summary>
    public partial class CertificationViewModel
    {
        /// <summary>
        /// Initializes a new instance of the CertificationViewModel class.
        /// </summary>
        public CertificationViewModel() { }

        /// <summary>
        /// Initializes a new instance of the CertificationViewModel class.
        /// </summary>
        public CertificationViewModel(int? privateSiteId = default(int?), Guid? id = default(Guid?), string title = default(string), VisibilityViewModel certificationVisibility = default(VisibilityViewModel))
        {
            PrivateSiteId = privateSiteId;
            Id = id;
            Title = title;
            CertificationVisibility = certificationVisibility;
        }

        /// <summary>
        /// Gets or sets the private site id.
        /// </summary>
        [JsonProperty(PropertyName = "PrivateSiteId")]
        public int? PrivateSiteId { get; set; }

        /// <summary>
        /// Gets or sets the id.
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public Guid? Id { get; set; }

        /// <summary>
        /// Gets or sets the title.
        /// </summary>
        [JsonProperty(PropertyName = "Title")]
        public string Title { get; set; }

        /// <summary>
        /// Gets or sets the certification visibility.
        /// </summary>
        [JsonProperty(PropertyName = "CertificationVisibility")]
        public VisibilityViewModel CertificationVisibility { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (this.Title != null)
            {
                if (this.Title.Length > 100)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "Title", 100);
                }
                if (this.Title.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "Title", 0);
                }
            }
        }
    }
}
