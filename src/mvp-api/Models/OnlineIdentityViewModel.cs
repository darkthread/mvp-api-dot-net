// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace MVP.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class OnlineIdentityViewModel
    {
        /// <summary>
        /// Initializes a new instance of the OnlineIdentityViewModel class.
        /// </summary>
        public OnlineIdentityViewModel() { }

        /// <summary>
        /// Initializes a new instance of the OnlineIdentityViewModel class.
        /// </summary>
        public OnlineIdentityViewModel(SocialNetworkViewModel socialNetwork, string url, int? privateSiteId = default(int?), VisibilityViewModel onlineIdentityVisibility = default(VisibilityViewModel), bool? contributionCollected = default(bool?), string displayName = default(string), string userId = default(string), string microsoftAccount = default(string), bool? privacyConsentStatus = default(bool?), bool? privacyConsentCheckStatus = default(bool?), DateTime? privacyConsentCheckDate = default(DateTime?), DateTime? privacyConsentUnCheckDate = default(DateTime?), bool? submitted = default(bool?))
        {
            PrivateSiteId = privateSiteId;
            SocialNetwork = socialNetwork;
            Url = url;
            OnlineIdentityVisibility = onlineIdentityVisibility;
            ContributionCollected = contributionCollected;
            DisplayName = displayName;
            UserId = userId;
            MicrosoftAccount = microsoftAccount;
            PrivacyConsentStatus = privacyConsentStatus;
            PrivacyConsentCheckStatus = privacyConsentCheckStatus;
            PrivacyConsentCheckDate = privacyConsentCheckDate;
            PrivacyConsentUnCheckDate = privacyConsentUnCheckDate;
            Submitted = submitted;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PrivateSiteId")]
        public int? PrivateSiteId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SocialNetwork")]
        public SocialNetworkViewModel SocialNetwork { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Url")]
        public string Url { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OnlineIdentityVisibility")]
        public VisibilityViewModel OnlineIdentityVisibility { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ContributionCollected")]
        public bool? ContributionCollected { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DisplayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "UserId")]
        public string UserId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MicrosoftAccount")]
        public string MicrosoftAccount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PrivacyConsentStatus")]
        public bool? PrivacyConsentStatus { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PrivacyConsentCheckStatus")]
        public bool? PrivacyConsentCheckStatus { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PrivacyConsentCheckDate")]
        public DateTime? PrivacyConsentCheckDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PrivacyConsentUnCheckDate")]
        public DateTime? PrivacyConsentUnCheckDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Submitted")]
        public bool? Submitted { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (SocialNetwork == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SocialNetwork");
            }
            if (Url == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Url");
            }
            if (this.SocialNetwork != null)
            {
                this.SocialNetwork.Validate();
            }
            if (this.Url != null)
            {
                if (this.Url.Length > 490)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "Url", 490);
                }
                if (this.Url.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "Url", 0);
                }
                if (!System.Text.RegularExpressions.Regex.IsMatch(this.Url, "^((https?|ftp):\\/\\/)?(((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-fA-F]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-fA-F]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-fA-F]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-fA-F]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-fA-F]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$"))
                {
                    throw new ValidationException(ValidationRules.Pattern, "Url", "^((https?|ftp):\\/\\/)?(((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-fA-F]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-fA-F]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-fA-F]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-fA-F]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-fA-F]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$");
                }
            }
            if (this.DisplayName != null)
            {
                if (this.DisplayName.Length > 500)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "DisplayName", 500);
                }
                if (this.DisplayName.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "DisplayName", 0);
                }
            }
            if (this.UserId != null)
            {
                if (this.UserId.Length > 500)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "UserId", 500);
                }
                if (this.UserId.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "UserId", 0);
                }
            }
            if (this.MicrosoftAccount != null)
            {
                if (this.MicrosoftAccount.Length > 500)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "MicrosoftAccount", 500);
                }
                if (this.MicrosoftAccount.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "MicrosoftAccount", 0);
                }
            }
        }
    }
}
